{"version":3,"sources":["file:///C:/Users/ASUS/MindYourStep_1/assets/Script/GameManager.ts"],"names":["_decorator","Component","Prefab","instantiate","Node","CCInteger","ccclass","property","BlockType","GameState","GameManager","type","PlayerController","_road","_curState","GS_INIT","start","generateRoad","node","removeAllChildren","push","BT_STONE","i","roadLength","BT_NONE","Math","floor","random","j","length","block","spawnBlockByType","addChild","setPosition","cubePrfb"],"mappings":";;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;;;;;;;OACrD;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBP,U;;iBAEzBQ,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;AAGJ;;iBACIC,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;AAIF;;6BAGUC,W,WADZJ,OAAO,CAAC,aAAD,C,UAGHC,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAET;AAAP,OAAD,C,UAERK,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEN;AAAP,OAAD,C,UAGRE,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEC;AAAP,OAAD,C,UAERL,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEP;AAAP,OAAD,C,2BAVb,MACaM,WADb,SACiCT,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAM/BY,KAN+B,GAMb,EANa;;AAAA;;AAAA;;AAAA,eAY/BC,SAZ+B,GAYRL,SAAS,CAACM,OAZF;AAAA;;AAavCC,QAAAA,KAAK,GAAI;AACL,eAAKC,YAAL;AACH;;AAEDA,QAAAA,YAAY,GAAG;AAEX,eAAKC,IAAL,CAAUC,iBAAV;AAEA,eAAKN,KAAL,GAAa,EAAb,CAJW,CAKX;;AACA,eAAKA,KAAL,CAAWO,IAAX,CAAgBZ,SAAS,CAACa,QAA1B;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAzB,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,gBAAI,KAAKT,KAAL,CAAWS,CAAC,GAAC,CAAb,MAAoBd,SAAS,CAACgB,OAAlC,EAA2C;AACvC,mBAAKX,KAAL,CAAWO,IAAX,CAAgBZ,SAAS,CAACa,QAA1B;AACH,aAFD,MAEO;AACH,mBAAKR,KAAL,CAAWO,IAAX,CAAgBK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAhB;AACH;AACJ;;AAED,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKf,KAAL,CAAWgB,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIE,KAAW,GAAG,KAAKC,gBAAL,CAAsB,KAAKlB,KAAL,CAAWe,CAAX,CAAtB,CAAlB;;AACA,gBAAIE,KAAJ,EAAW;AACP,mBAAKZ,IAAL,CAAUc,QAAV,CAAmBF,KAAnB;AACAA,cAAAA,KAAK,CAACG,WAAN,CAAkBL,CAAlB,EAAqB,CAAC,GAAtB,EAA2B,CAA3B;AACH;AACJ;AACJ;;AAEDG,QAAAA,gBAAgB,CAACpB,IAAD,EAAkB;AAC9B,cAAI,CAAC,KAAKuB,QAAV,EAAoB;AAChB,mBAAO,IAAP;AACH;;AAED,cAAIJ,KAAgB,GAAG,IAAvB;;AACA,kBAAOnB,IAAP;AACI,iBAAKH,SAAS,CAACa,QAAf;AACIS,cAAAA,KAAK,GAAG3B,WAAW,CAAC,KAAK+B,QAAN,CAAnB;AACA;AAHR;;AAMA,iBAAOJ,KAAP;AACH;;AAvDsC,O;;;;;iBAGR,I;;;;;;;iBAEH,E;;;;;;;iBAGU,I;;;;;;;iBAEb,I","sourcesContent":["import { _decorator, Component, Prefab, instantiate, Node, CCInteger} from 'cc';\nconst { ccclass, property } = _decorator;\n\nenum BlockType{\n    BT_NONE,\n    BT_STONE,\n};\nenum GameState{\n    GS_INIT,\n    GS_PLAYING,\n    GS_END,\n  };\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n\n    @property({type: Prefab})\n    public cubePrfb: Prefab|null = null;\n    @property({type: CCInteger})\n    public roadLength: Number = 50;\n    private _road: number[] = [];\n    @property({type: PlayerController})\n    public playerCtrl: PlayerController = null;\n    @property({type: Node})\n    public startMenu: Node = null;\n\n    private _curState: GameState = GameState.GS_INIT;\n    start () {\n        this.generateRoad();\n    }\n\n    generateRoad() {\n\n        this.node.removeAllChildren();\n\n        this._road = [];\n        // startPos\n        this._road.push(BlockType.BT_STONE);\n\n        for (let i = 1; i < this.roadLength; i++) {\n            if (this._road[i-1] === BlockType.BT_NONE) {\n                this._road.push(BlockType.BT_STONE);\n            } else {\n                this._road.push(Math.floor(Math.random() * 2));\n            }\n        }\n\n        for (let j = 0; j < this._road.length; j++) {\n            let block: Node = this.spawnBlockByType(this._road[j]);\n            if (block) {\n                this.node.addChild(block);\n                block.setPosition(j, -1.5, 0);\n            }\n        }\n    }\n\n    spawnBlockByType(type: BlockType) {\n        if (!this.cubePrfb) {\n            return null;\n        }\n\n        let block: Node|null = null;\n        switch(type) {\n            case BlockType.BT_STONE:\n                block = instantiate(this.cubePrfb);\n                break;\n        }\n\n        return block;\n    }\n\n    \n}\n\n"]}