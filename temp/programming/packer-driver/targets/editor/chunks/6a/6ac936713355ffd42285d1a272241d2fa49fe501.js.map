{"version":3,"sources":["file:///C:/Users/ASUS/MindYourStep_1/assets/Script/GameManager.ts"],"names":["_decorator","Component","Prefab","instantiate","Node","CCInteger","Vec3","PlayerController","ccclass","property","BlockType","GameState","GameManager","type","_road","_curState","GS_INIT","start","curState","init","startMenu","active","generateRoad","playerCtrl","setInputActive","node","setPosition","ZERO","onPlayButtonClick","GS_PLAYING","value","setTimeout","GS_END","removeAllChildren","push","BT_STONE","i","roadLength","BT_NONE","Math","floor","random","j","length","block","spawnBlockByType","addChild","cubePrfb"],"mappings":";;;;;;;;;;;;;;;;;;;;AAASA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,W,OAAAA,W;AAAaC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;;AAC7DC,MAAAA,gB,iBAAAA,gB;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBT,U;;iBAEzBU,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;AAGJ;;iBACIC,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;AAAAA,QAAAA,S,CAAAA,S;SAAAA,S,KAAAA,S;;AAIF;;6BAGUC,W,WADZJ,OAAO,CAAC,aAAD,C,UAGHC,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAEX;AAAP,OAAD,C,UAERO,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAER;AAAP,OAAD,C,UAGRI,QAAQ,CAAC;AAACI,QAAAA,IAAI;AAAA;AAAA;AAAL,OAAD,C,UAERJ,QAAQ,CAAC;AAACI,QAAAA,IAAI,EAAET;AAAP,OAAD,C,2BAVb,MACaQ,WADb,SACiCX,SADjC,CAC2C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,eAM/Ba,KAN+B,GAMb,EANa;;AAAA;;AAAA;;AAAA,eAY/BC,SAZ+B,GAYRJ,SAAS,CAACK,OAZF;AAAA;;AAavCC,QAAAA,KAAK,GAAI;AACL,eAAKC,QAAL,GAAgBP,SAAS,CAACK,OAA1B;AACD;;AAEDG,QAAAA,IAAI,GAAG;AACL,cAAI,KAAKC,SAAT,EAAoB;AAChB,iBAAKA,SAAL,CAAeC,MAAf,GAAwB,IAAxB;AACH;;AAGD,eAAKC,YAAL;;AACA,cAAI,KAAKC,UAAT,EAAqB;AACjB,iBAAKA,UAAL,CAAgBC,cAAhB,CAA+B,KAA/B;AACA,iBAAKD,UAAL,CAAgBE,IAAhB,CAAqBC,WAArB,CAAiCpB,IAAI,CAACqB,IAAtC;AACH;AACF;;AAGHC,QAAAA,iBAAiB,GAAE;AACf,eAAKV,QAAL,GAAgBP,SAAS,CAACkB,UAA1B;AACH;;AAEa,YAARX,QAAQ,CAAEY,KAAF,EAAoB;AAC9B,kBAAOA,KAAP;AACI,iBAAKnB,SAAS,CAACK,OAAf;AACI,mBAAKG,IAAL;AACA;;AACJ,iBAAKR,SAAS,CAACkB,UAAf;AACI,kBAAI,KAAKT,SAAT,EAAoB;AAChB,qBAAKA,SAAL,CAAeC,MAAf,GAAwB,KAAxB;AACH,eAHL,CAII;AACA;;;AACAU,cAAAA,UAAU,CAAC,MAAM;AACb,oBAAI,KAAKR,UAAT,EAAqB;AACjB,uBAAKA,UAAL,CAAgBC,cAAhB,CAA+B,IAA/B;AACH;AACJ,eAJS,EAIP,GAJO,CAAV;AAKA;;AACJ,iBAAKb,SAAS,CAACqB,MAAf;AACI;AAjBR;;AAmBA,eAAKjB,SAAL,GAAiBe,KAAjB;AACD;;AACHR,QAAAA,YAAY,GAAG;AAEX,eAAKG,IAAL,CAAUQ,iBAAV;AAEA,eAAKnB,KAAL,GAAa,EAAb,CAJW,CAKX;;AACA,eAAKA,KAAL,CAAWoB,IAAX,CAAgBxB,SAAS,CAACyB,QAA1B;;AAEA,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,UAAzB,EAAqCD,CAAC,EAAtC,EAA0C;AACtC,gBAAI,KAAKtB,KAAL,CAAWsB,CAAC,GAAC,CAAb,MAAoB1B,SAAS,CAAC4B,OAAlC,EAA2C;AACvC,mBAAKxB,KAAL,CAAWoB,IAAX,CAAgBxB,SAAS,CAACyB,QAA1B;AACH,aAFD,MAEO;AACH,mBAAKrB,KAAL,CAAWoB,IAAX,CAAgBK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,CAA3B,CAAhB;AACH;AACJ;;AAED,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAK5B,KAAL,CAAW6B,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,gBAAIE,KAAW,GAAG,KAAKC,gBAAL,CAAsB,KAAK/B,KAAL,CAAW4B,CAAX,CAAtB,CAAlB;;AACA,gBAAIE,KAAJ,EAAW;AACP,mBAAKnB,IAAL,CAAUqB,QAAV,CAAmBF,KAAnB;AACAA,cAAAA,KAAK,CAAClB,WAAN,CAAkBgB,CAAlB,EAAqB,CAAC,GAAtB,EAA2B,CAA3B;AACH;AACJ;AACJ;;AAEDG,QAAAA,gBAAgB,CAAChC,IAAD,EAAkB;AAC9B,cAAI,CAAC,KAAKkC,QAAV,EAAoB;AAChB,mBAAO,IAAP;AACH;;AAED,cAAIH,KAAgB,GAAG,IAAvB;;AACA,kBAAO/B,IAAP;AACI,iBAAKH,SAAS,CAACyB,QAAf;AACIS,cAAAA,KAAK,GAAGzC,WAAW,CAAC,KAAK4C,QAAN,CAAnB;AACA;AAHR;;AAMA,iBAAOH,KAAP;AACH;;AA/FsC,O;;;;;iBAGR,I;;;;;;;iBAEH,E;;;;;;;iBAGU,I;;;;;;;iBAEb,I","sourcesContent":["import { _decorator, Component, Prefab, instantiate, Node, CCInteger, Vec3} from 'cc';\nimport { PlayerController } from './PlayerController';\nconst { ccclass, property } = _decorator;\n\nenum BlockType{\n    BT_NONE,\n    BT_STONE,\n};\nenum GameState{\n    GS_INIT,\n    GS_PLAYING,\n    GS_END,\n  };\n\n@ccclass(\"GameManager\")\nexport class GameManager extends Component {\n\n    @property({type: Prefab})\n    public cubePrfb: Prefab|null = null;\n    @property({type: CCInteger})\n    public roadLength: Number = 50;\n    private _road: number[] = [];\n    @property({type: PlayerController})\n    public playerCtrl: PlayerController = null;\n    @property({type: Node})\n    public startMenu: Node = null;\n\n    private _curState: GameState = GameState.GS_INIT;\n    start () {\n        this.curState = GameState.GS_INIT;\n      }\n      \n      init() {\n        if (this.startMenu) {\n            this.startMenu.active = true;\n        }\n\n      \n        this.generateRoad();\n        if (this.playerCtrl) {\n            this.playerCtrl.setInputActive(false);\n            this.playerCtrl.node.setPosition(Vec3.ZERO);\n        }\n      }\n\n      \n    onPlayButtonClick(){\n        this.curState = GameState.GS_PLAYING;\n    }\n      \n      set curState (value: GameState) {\n        switch(value) {\n            case GameState.GS_INIT:\n                this.init();\n                break;\n            case GameState.GS_PLAYING:\n                if (this.startMenu) {\n                    this.startMenu.active = false;\n                }\n                // Directly setting active will directly start monitoring\n                // mouse events, and do a little delay processing\n                setTimeout(() => {\n                    if (this.playerCtrl) {\n                        this.playerCtrl.setInputActive(true);\n                    }\n                }, 0.1);\n                break;\n            case GameState.GS_END:\n                break;\n        }\n        this._curState = value;\n      }\n    generateRoad() {\n\n        this.node.removeAllChildren();\n\n        this._road = [];\n        // startPos\n        this._road.push(BlockType.BT_STONE);\n\n        for (let i = 1; i < this.roadLength; i++) {\n            if (this._road[i-1] === BlockType.BT_NONE) {\n                this._road.push(BlockType.BT_STONE);\n            } else {\n                this._road.push(Math.floor(Math.random() * 2));\n            }\n        }\n\n        for (let j = 0; j < this._road.length; j++) {\n            let block: Node = this.spawnBlockByType(this._road[j]);\n            if (block) {\n                this.node.addChild(block);\n                block.setPosition(j, -1.5, 0);\n            }\n        }\n    }\n\n    spawnBlockByType(type: BlockType) {\n        if (!this.cubePrfb) {\n            return null;\n        }\n\n        let block: Node|null = null;\n        switch(type) {\n            case BlockType.BT_STONE:\n                block = instantiate(this.cubePrfb);\n                break;\n        }\n\n        return block;\n    }\n\n    \n}\n\n"]}